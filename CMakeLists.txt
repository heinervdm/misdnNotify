PROJECT(mISDNnotify)

cmake_policy(VERSION 2.6)
cmake_minimum_required(VERSION 2.6)

INCLUDE(CheckLibraryExists)
INCLUDE(CheckIncludeFiles)
INCLUDE(FindPkgConfig)

# Setup package meta-data
SET(PACKAGE "mISDNnotify")
SET(VERSION "0.1.0")
SET(PACKAGE_TARNAME "mISDNnotify")
SET(PACKAGE_BUGREPORT " ")
SET(PACKAGE_NAME "mISDNnotify")
SET(PACKAGE_VERSION "-")
SET(PACKAGE_STRING "mISDNnotify-")
SET(OPERATING_SYSTEM "${CMAKE_SYSTEM_NAME}")

#SET(CMAKE_C_FLAGS "-g")

SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

FIND_PACKAGE(CURL)

PKG_CHECK_MODULES(GLIB REQUIRED glib-2.0)

PKG_CHECK_MODULES(DBUSGLIB REQUIRED dbus-glib-1)

PKG_CHECK_MODULES(SQLITE3 sqlite3)

IF(CURL_FOUND)
	CHECK_INCLUDE_FILES("curl/curl.h" HAVE_LIBCURL)
	INCLUDE_DIRECTORIES( ${CURL_INCLUDES} )
	LINK_LIBRARIES( ${CURL_LIBRARIES} )
ENDIF(CURL_FOUND)

IF(DBUSGLIB_FOUND)
	INCLUDE_DIRECTORIES(${DBUSGLIB_INCLUDE_DIRS})
	LINK_LIBRARIES(${DBUSGLIB_LIBRARIES})
	SET(HAVE_DBUSGLIB 1)
ENDIF(DBUSGLIB_FOUND)

IF(SQLITE3_FOUND)
	CHECK_INCLUDE_FILES("sqlite3.h" HAVE_SQLITE3)
	INCLUDE_DIRECTORIES(${SQLITE3_INCLUDE_DIRS})
	LINK_LIBRARIES(${SQLITE3_LIBRARIES})
ENDIF(SQLITE3_FOUND)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.in ${CMAKE_CURRENT_BINARY_DIR}/config.h IMMEDIATE @ONLY)

INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/src)

ADD_SUBDIRECTORY(src)